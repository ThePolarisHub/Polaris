import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@polaris/ui/globals.css";
import { Providers } from "@/components/providers";

import { cn } from "@polaris/ui/cn";

const geistSans = Geist({
	variable: "--font-geist-sans",
	subsets: ["latin"],
});

const geistMono = Geist_Mono({
	variable: "--font-geist-mono",
	subsets: ["latin"],
});

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

interface RootLayoutParams {
	locale: string;
}

interface RootLayoutProps extends React.PropsWithChildren {
	params: Promise<RootLayoutParams>;
}

export default async function RootLayout({
	children,
	params,
}: RootLayoutProps) {
	const { locale } = await params;

	return (
		<html lang={locale} suppressHydrationWarning>
			<body
				className={cn(
					geistSans.variable,
					geistMono.variable,
					"antialiased whitespace-pre-line overscroll-none",
				)}
			>
				<Providers locale={locale}>{children}</Providers>
			</body>
		</html>
	);
}
